set(MESH_SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/Meshes)
set(TEXTURE_SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/Textures)
set(TEXTURE2_SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/Textures2)
set(CONFIG_SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/Config)
set(THUMBNAIL_SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/Thumbnail)
set(DOC_SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/Doc)

if(OPENGL_FOUND) # OpenGL is required for this target

add_library(Dragonfly SHARED
	Dragonfly.cpp
	Internal.cpp
	instruments.cpp
	Matrix.cpp
	quaternion.cpp
	vectors.cpp
	Hsystems.cpp
	Thermal.cpp
	Esystems.cpp
	panel.rc
)

set_target_properties(Dragonfly
	PROPERTIES
	FOLDER Vessels
)

target_include_directories(Dragonfly
	PUBLIC ${SPACEXPANSE_SOURCE_SDK_INCLUDE_DIR}
)

target_link_libraries(Dragonfly
	${SPACEXPANSE_LIB}
	${SPACEXPANSE_SDK_LIB}
	OpenGL::GL
	OpenGL::GLU
)

add_dependencies(Dragonfly
	${SpaceXpanseTgt}
	SpaceXpansesdk
)

add_custom_command(
	TARGET Dragonfly PRE_BUILD
	COMMAND ${CMAKE_COMMAND} -E copy_directory ${CONFIG_SOURCE_DIR}/ ${CMAKE_BINARY_DIR}/Config/Vessels
)

add_custom_command(
	TARGET Dragonfly PRE_BUILD
	COMMAND ${CMAKE_COMMAND} -E copy_directory ${MESH_SOURCE_DIR}/ ${CMAKE_BINARY_DIR}/Meshes
)

add_custom_command(
	TARGET Dragonfly PRE_BUILD
	COMMAND ${CMAKE_COMMAND} -E copy_directory ${TEXTURE_SOURCE_DIR}/ ${SPACEXPANSE_BINARY_TEXTURES_DIR}/Dragonfly
)

add_custom_command(
	TARGET Dragonfly PRE_BUILD
	COMMAND ${CMAKE_COMMAND} -E copy_directory ${TEXTURE2_SOURCE_DIR}/ ${SPACEXPANSE_BINARY_TEXTURES2_DIR}/Dragonfly
)

add_custom_command(
	TARGET Dragonfly PRE_BUILD
	COMMAND ${CMAKE_COMMAND} -E copy_directory ${THUMBNAIL_SOURCE_DIR}/ ${CMAKE_BINARY_DIR}/Images/Vessels/Default
)

#add_custom_command(
#	TARGET Dragonfly PRE_BUILD
#	COMMAND ${CMAKE_COMMAND} -E make_directory ${SPACEXPANSE_BINARY_DOC_DIR}
#	COMMAND ${CMAKE_COMMAND} -E copy ${DOC_SOURCE_DIR}/Dragonfly.pdf ${SPACEXPANSE_BINARY_DOC_DIR}
#)

install(TARGETS Dragonfly
	RUNTIME
	DESTINATION ${SPACEXPANSE_INSTALL_MODULE_DIR}
)
install(DIRECTORY ${CONFIG_SOURCE_DIR}/
	DESTINATION ${SPACEXPANSE_INSTALL_ROOT_DIR}/Config/Vessels
)
install(DIRECTORY ${MESH_SOURCE_DIR}/
	DESTINATION ${SPACEXPANSE_INSTALL_ROOT_DIR}/Meshes/Dragonfly
)
install(DIRECTORY ${TEXTURE_SOURCE_DIR}/
	DESTINATION ${SPACEXPANSE_INSTALL_TEXTURES_DIR}/Dragonfly
)
install(DIRECTORY ${TEXTURE2_SOURCE_DIR}/
	DESTINATION ${SPACEXPANSE_INSTALL_TEXTURES2_DIR}/Dragonfly
)
install(DIRECTORY ${THUMBNAIL_SOURCE_DIR}/
	DESTINATION ${SPACEXPANSE_INSTALL_ROOT_DIR}/Images/Vessels/Default
)
#install(FILES ${DOC_SOURCE_DIR}/Dragonfly.pdf
#	DESTINATION ${SPACEXPANSE_INSTALL_DOC_DIR}
#)

else()

message(WARNING "OpenGL libraries not found. Skipping Dragonfly build.")

endif()
