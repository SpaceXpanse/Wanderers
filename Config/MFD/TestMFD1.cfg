--[[
Name = Test1
Script = TestMFD1.cfg
Key = 0x16 ; 'U'
Persist = vessel
END_PARSE
--]]

-- global reference to vessel associated with MFD
vi = vessel.get_focusinterface()
actionstr = ''

-- the list of button labels
btn_label = {'BT1','BT2'}

-- table of button menu entries
btn_menu = {
  {l1='This is the first',l2='MFD button',sel='a'},
  {l1='This is the second',l2='MFD button',sel='b'}
}

-- callback function: button label for button 'bt' (>= 0)
function buttonlabel(bt)
  if bt < 2 then
    return btn_label[bt+1]
  end
  return nil
end

-- callback function: button menu entries
function buttonmenu()
  return btn_menu,2
end

-- callback function: update display
function update(skp)
  ch,cw = skp:get_charsize()
  mfd:set_title(skp,'TestMFD1')
  skp:text(cw*5,ch*10,actionstr,#actionstr)
  return true
end

-- respond to button presses
function consumebutton(bt,event)
  if bt==0 then
    if event%PANEL_MOUSE.LBPRESSED == PANEL_MOUSE.LBDOWN then
      button1_func()
    end
    return true
  elseif bt==1 then
    if event%PANEL_MOUSE.LBPRESSED == PANEL_MOUSE.LBDOWN then
      button2_func()
    end
    return true
  else
    -- just for fun, let's trap unassigned buttons as well
    if event%PANEL_MOUSE.LBPRESSED == PANEL_MOUSE.LBDOWN then
      button_inv_func()
    end
    return true
  end
end

-- respond to keybard shortcuts
function consumekeybuffered(key)
  if key==OAPI_KEY.A then
    button1_func()
    return true
  elseif key==OAPI_KEY.B then
    button2_func()
    return true
  else
    return false
  end
end

-- dummy action for button 1
function button1_func()
  actionstr = 'button 1 pressed'
  mfd:invalidate_display()
end

-- dummy action for button 2
function button2_func()
  actionstr = 'button 2 pressed'
  mfd:invalidate_display()
end

-- dummy action for invalid buttons
function button_inv_func()
  actionstr = "don't press that button again"
  mfd:invalidate_display()
end
